      import java.util.Arrays;
public class Sorting {

    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            int j = partition(arr, low, high);
            quickSort(arr, low, j);
            quickSort(arr, j + 1, high);
        }
    }

    public static int partition(int[] arr, int low, int high) {
        int pivot = arr[low]; // First element as pivot
        int i = low;
        int j = high;

        while (i < j) {
            do {
                i++;
            } while (i <= high && arr[i] <= pivot);
            do {
                j--;
            } while (j >= low && arr[j] > pivot);

            if (i < j) {
                swap(arr, i, j);
            }
        }

        swap(arr, low, j); // Place pivot in correct position
        return j;
    }

    public static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n =sc.nextInt();
        int [] arr = new int[n];
        for(int i=0;i<arr.length;i++) {
     	   arr[i]=sc.nextInt();
        }

        
        quickSort(arr, 0, arr.length - 1);
        System.out.println(Arrays.toString(arr));
    }
}


